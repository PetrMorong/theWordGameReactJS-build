{"version":3,"sources":["assets/cz-flag.png","assets/en-flag.png","scenes/preload/styles.js","scenes/preload/index.js","constants/lettersEnglish.js","utils/index.js","constants/lettersCzech.js","constants/routes.js","scenes/menu/styles.js","firebase/index.js","redux/reducer.js","scenes/menu/index.js","scenes/game/styles.js","scenes/game/timer.js","scenes/game/topRow.js","scenes/game/newLetters.js","scenes/game/letterChoosing.js","scenes/game/midle.js","scenes/game/settings.js","scenes/game/index.js","constants/index.js","scenes/waitingForOponent/styles.js","scenes/waitingForOponent/index.js","serviceWorker.js","index.js","assets/splash.png"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Image","img","_templateObject2","FBInstant","window","Preload","history","this","props","setLoadingProgress","startGameAsync","then","push","react_default","a","createElement","src","ImageSrc","Component","vowelsEnglish","letters","en","cz","vowels","generateWordsRandomly","language","lettersRoundOne","wordIndex","i","randomNumber","Math","random","length","x","floor","validateWord","words","parsedWord","wordIsValid","len","_toUpper","sortValidAndInvalidWors","newValidWords","sort","y","valid","sortBasedOnLength","b","text","checkIfWordIsAlreadySubmited","validWords","submited","amIPlayerOneFunc","parsedUser","playerOne","uid","countPoints","points","_map","_keys","index","dbRefUpdated","prev","current","Object","keys","getUserObject","player","getID","displayName","getName","photoURL","getPhoto","isGameRefSet","gameRoomDatabaseRef","routes","PRELOAD","MENU","GAME","WAITING_FOR_OPONENT","PlayButton","color","height","marginBottom","marginTop","PlayWithFriendButton","styles_templateObject","UserWrap","styles_templateObject2","UserImage","_templateObject3","UserName","span","_templateObject4","LanguagesWrap","_templateObject5","LanguageButton","_templateObject6","_ref","selected","LanguageButtonImage","_templateObject7","firebase","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","initialState","SET_GAME_ROOM_DATABASE_REF","Menu","state","loading","handleStartGame","_this","setState","gameRoomRef","where","limit","get","snapshot","empty","createGameRoom","forEach","doc","joinGameRoom","_this$props","dispatch","lettersRoundOneSetTwo","add","playerTwo","isFull","waitingForAFriend","leftInWaitingRoom","playerOnePoints","playerTwoPoints","pathname","type","payload","_callee","existingGameRoom","_this$props2","regenerator_default","wrap","_context","next","ref","update","startedAt","moment","format","stop","handleChangeLanguage","handlePlayWithFriend","_callee2","players","contextPlayers","playerToInvite","_context2","context","chooseAsync","sent","getPlayersAsync","map","find","createAsync","console","log","updateAsync","action","cta","image","btoa","splash","default","localizations","en_US","template","data","gameRoomId","strategy","notification","Firebase","firestore","collection","_this2","_this$state","styles_Container","Button_default","variant","disabled","style","objectSpread","S","backgroundColor","onClick","size","CzFlag","EnFlag","connect","spinnerStyle","marginRight","game_styles_templateObject","PlayerPhoto","game_styles_templateObject2","opponent","TopRow","styles_templateObject3","PlayerInfoWrap","styles_templateObject4","PlayerName","styles_templateObject5","TimerWrap","styles_templateObject6","TimerText","styles_templateObject7","_ref2","last10sec","Bottom","_templateObject8","Letter","_templateObject9","_ref3","newWords","_ref4","clicked","_ref5","hasNewWords","ActualLetter","_templateObject10","WordRow","_templateObject11","LetterWordOpponent","_templateObject12","_ref6","LetterWord","_templateObject13","_ref7","LetterWordText","_templateObject14","_templateObject15","_ref8","ChosenLettersWrap","_templateObject16","ChosenLettersContainer","_templateObject17","ChosenLetters","_templateObject18","EraseButton","_templateObject19","_ref9","gameEnded","EraseButtonText","_templateObject20","_ref10","_templateObject21","SendButton","_templateObject22","_ref11","MidleWrap","_templateObject23","_templateObject24","Midle","_templateObject25","MidleLeft","_templateObject26","MidleRight","_templateObject27","MiddleRowWrap","_templateObject28","GameEndedStats","_templateObject29","GameEndedStatsText","_templateObject30","SettingsWrap","_templateObject31","PlayerStats","_templateObject32","PlayerPoints","_templateObject33","roundTime","Timer","timerValueInSeconds","onGameStarted","onGameEnded","gameRoomState","timer","setInterval","diff","Moment","timeLeft","duration","asSeconds","clearInterval","location","prevProps","_get","_this$props3","_this$props3$gameRoom","amIPlayerOne","myPoints","opponentPoints","utc","React","user","styles_TopRow","source","Transition","Slide_default","assign","direction","NewLetters","open","handleOpenModal","handleConfirm","hadleGetNewWords","handleClose","react","key","_noop","borderColor","Autorenew_default","Dialog_default","onClose","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","DialogActions_default","handleFinishWatchingAd","userWatchedAd","choosenLetters","clickedLetterIndexes","LetterChoosing","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleLetterClick","params","letterArray","newChosenLetters","concat","toConsumableArray","newClickedLetterIndexes","handleDeletePress","_this$state2","splice","handleSendClick","setParentState","word","item","_identity","join","_split","_debounce","bind","assertThisInitialized","_this$state3","iWon","isDraw","opponentFinished","opponentDidNotFinish","someoneLeftTheGame","playerOneLeft","playerTwoLeft","CircularProgress_default","goHome","newLetters","lettersObject","_partial","letter","opponentWords","styles_Midle","emptyLetters","Settings","handleLeave","onLeave","IconButton_default","aria-label","opacity","ExitToApp_default","wordsAlises","wordListsUrls","Game","gameStarted","getGameRoomState","onSnapshot","getWordVocabulary","lang","wordInCache","apiCall","localStorage","getItem","setWords","JSON","parse","abrupt","axios","setItem","stringify","wordsFromApi","defineProperty","roundOnePlayerOneWords","roundOnePlayerTwoWords","intervalForOpponentFinish","setTimeout","newState","handleLeaveTheGame","_this$props4","game_styles_Container","getOpponentWords","getOpponentFinished","topRow","midle","letterChoosing","settings","waitingForOponent_styles_templateObject","Text","waitingForOponent_styles_templateObject2","BackWrap","waitingForOponent_styles_templateObject3","WaitingForOponent","handleBack","waitingForOponent_styles_Container","ArrowBackIos_default","mode","handleShareWithFriend","Boolean","hostname","match","store","createStore","arguments","undefined","initializeAsync","ReactDOM","render","es","BrowserRouter","Switch","Route","exact","path","component","document","getElementById","catch","error","message","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.370c8a5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cz-flag.eada4bf2.png\";","module.exports = __webpack_public_path__ + \"static/media/en-flag.4d460eba.png\";","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  background: #1e2942;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Image = styled.img`\n  width: 300px;\n  height: 600px;\n  margin-top: 25px;\n`;\n","import React, { Component } from \"react\";\nimport * as S from \"./styles\";\nimport ImageSrc from \"../../assets/splash.png\";\nconst FBInstant = window.FBInstant;\n\nclass Preload extends Component {\n  componentDidMount() {\n    const { history } = this.props;\n    FBInstant.setLoadingProgress(100);\n    FBInstant.startGameAsync().then(function() {\n      history.push(\"/menu\");\n    });\n  }\n\n  render() {\n    return (\n      <S.Container>\n        <S.Image src={ImageSrc} />\n      </S.Container>\n    );\n  }\n}\n\nexport default Preload;\n","const lettersEnglish = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\"\n];\n\nexport const vowelsEnglish = [\"A\", \"E\", \"I\", \"O\", \"U\"];\n\nexport default lettersEnglish;\n","// @flow\n/*eslint-disable no-nested-ternary*/\nimport _toUpper from \"lodash/toUpper\";\nimport _get from \"lodash/get\";\nimport _map from \"lodash/map\";\nimport _keys from \"lodash/keys\";\nimport LettersEnglish, { vowelsEnglish } from \"../constants/lettersEnglish\";\nimport LettersCzech from \"../constants/lettersCzech\";\n\nconst letters = {\n  en: LettersEnglish,\n  cz: LettersCzech\n};\n\nconst vowels = {\n  en: vowelsEnglish,\n  cz: vowelsEnglish\n};\n\nexport const generateWordsRandomly = language => {\n  const lettersRoundOne = [];\n  let wordIndex = 0;\n  for (let i = 0, len = 10; i < len; i += 1) {\n    if (wordIndex === 3 || wordIndex === 7) {\n      const randomNumber = Math.random() * vowels[language].length + 0;\n      lettersRoundOne.push({\n        x: [wordIndex, vowels[language][Math.floor(randomNumber)]]\n      });\n    } else {\n      const randomNumber = Math.random() * letters[language].length + 0;\n      lettersRoundOne.push({\n        x: [wordIndex, letters[language][Math.floor(randomNumber)]]\n      });\n    }\n    wordIndex += 1;\n  }\n  return lettersRoundOne;\n};\n\nexport const validateWord = (language, words, parsedWord) => {\n  let wordIsValid = false;\n  for (let i = 0, len = words[language].length; i < len; i += 1) {\n    if (_toUpper(words[language][i]) === parsedWord) {\n      wordIsValid = true;\n      break;\n    }\n  }\n  return wordIsValid;\n};\n\nexport const sortValidAndInvalidWors = newValidWords =>\n  newValidWords.sort((x, y) => (x.valid === y.valid ? 0 : x.valid ? -1 : 1));\n\nexport const sortBasedOnLength = newValidWords =>\n  newValidWords.sort((a, b) => {\n    if ((a.valid && !b.valid) || (!a.valid && b.valid)) return 0;\n    return b.text.length - a.text.length;\n  });\n\nexport const checkIfWordIsAlreadySubmited = (validWords, parsedWord) => {\n  let submited = false;\n  for (let i = 0, len = validWords.length; i < len; i += 1) {\n    if (validWords[i].text === parsedWord && validWords[i].valid) {\n      submited = true;\n    }\n  }\n  return submited;\n};\n\nexport const amIPlayerOneFunc = (parsedUser, playerOne) =>\n  parsedUser.uid.length > 0 && playerOne.uid === parsedUser.uid;\n\nexport const getOpponentWords = (amIPlayerOne, gameRoomState) =>\n  amIPlayerOne\n    ? _get(gameRoomState, \"roundOnePlayerTwoWords\")\n    : _get(gameRoomState, \"roundOnePlayerOneWords\");\n\nexport const getOpponentFinished = (amIPlayerOne, gameRoomState) =>\n  amIPlayerOne\n    ? _get(gameRoomState, \"roundOnePlayerTwoWords\", false)\n    : _get(gameRoomState, \"roundOnePlayerOneWords\", false);\n\nexport const countPoints = words => {\n  let points = 0;\n  _map(_keys(words), index => {\n    points += words[index].valid ? words[index].text.length : 0;\n  });\n  return points;\n};\n\nexport const dbRefUpdated = (prev, current) => {\n  return !Object.keys(prev).length && Object.keys(current).length > 0;\n};\n\nexport const getUserObject = FBInstant => ({\n  uid: FBInstant.player.getID(),\n  displayName: FBInstant.player.getName(),\n  photoURL: FBInstant.player.getPhoto()\n});\n\nexport const isGameRefSet = gameRoomDatabaseRef =>\n  Object.keys(gameRoomDatabaseRef).length > 0;\n","const lettersCzech = [\n  \"A\",\n  \"Á\",\n  \"B\",\n  \"C\",\n  \"Č\",\n  \"D\",\n  \"Ď\",\n  \"E\",\n  \"É\",\n  \"Ě\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"Í\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"Ň\",\n  \"O\",\n  \"Ó\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"Ř\",\n  \"S\",\n  \"Š\",\n  \"T\",\n  \"Ť\",\n  \"U\",\n  \"Ú\",\n  \"Ů\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Ý\",\n  \"Z\",\n  \"Ž\"\n];\n\nexport const vowelsCzech = [\n  \"A\",\n  \"Á\",\n  \"E\",\n  \"Ě\",\n  \"É\",\n  \"I\",\n  \"Í\",\n  \"O\",\n  \"Ó\",\n  \"U\",\n  \"Ú\",\n  \"Ů\"\n];\n\nexport default lettersCzech;\n","const routes = {\n  PRELOAD: \"Preload\",\n  MENU: \"Menu\",\n  GAME: \"Game\",\n  WAITING_FOR_OPONENT: \"WaitingForOponent\"\n};\n\nexport default routes;\n","import styled from \"styled-components\";\n\nexport const PlayButton = {\n  color: \"white\",\n  height: 50,\n  marginBottom: 20,\n  marginTop: 40\n};\nexport const PlayWithFriendButton = {\n  color: \"white\",\n  height: 50\n};\nexport const Container = styled.div`\n  background: #1e2942;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\nexport const UserWrap = styled.div`\n  position: absolute;\n  left: 10px;\n  top: 10px;\n  padding: 5px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nexport const UserImage = styled.img`\n  height: 40px;\n  width: 40px;\n  border-radius: 20px;\n  margin-right: 10px;\n`;\nexport const UserName = styled.span`\n  color: white;\n`;\nexport const LanguagesWrap = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 25px;\n  display: flex;\n  flex-direction: row;\n  width: 100px;\n`;\nexport const LanguageButton = styled.div`\n  width: auto;\n  height: 20px;\n  margin: 10px;\n  border: ${({ selected }) =>\n    selected ? \"2px solid #8ab717\" : \"2px solid #1e2942\"};\n  border-radius: 2px;\n  padding: 1px;\n`;\nexport const LanguageButtonImage = styled.img`\n  width: 30px;\n  height: 20px;\n  object-fit: cover;\n`;\n","const firebase = require(\"firebase/app\");\nrequire(\"firebase/firestore\");\n\nconst config = {\n  apiKey: \"AIzaSyAmVnTqHww15a21oTpq6xJQgHu0opeJ3_M\",\n  authDomain: \"slovnifotbal-23fed.firebaseapp.com\",\n  databaseURL: \"https://slovnifotbal-23fed.firebaseio.com\",\n  projectId: \"slovnifotbal-23fed\",\n  storageBucket: \"slovnifotbal-23fed.appspot.com\",\n  messagingSenderId: \"912034632142\"\n};\nexport default firebase.initializeApp(config);\n","const initialState = { gameRoomDatabaseRef: {} };\n\nexport const SET_GAME_ROOM_DATABASE_REF = \"SET_GAME_ROOM_DATABASE_REF\";\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_GAME_ROOM_DATABASE_REF:\n      return { gameRoomDatabaseRef: action.payload };\n    default:\n      return state;\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport CzFlag from \"../../assets/cz-flag.png\";\nimport EnFlag from \"../../assets/en-flag.png\";\nimport Button from \"@material-ui/core/Button\";\nimport { generateWordsRandomly, getUserObject } from \"../../utils\";\nimport routes from \"../../constants/routes\";\nimport * as S from \"./styles\";\nimport Firebase from \"../../firebase\";\nimport splash from \"../../assets/splash.png\";\nimport { SET_GAME_ROOM_DATABASE_REF } from \"../../redux/reducer\";\n\nconst FBInstant = window.FBInstant;\n\nclass Menu extends Component {\n  state = {\n    language: \"en\",\n    loading: false\n  };\n\n  componentDidMount() {\n    this.gameRoomRef = Firebase.firestore().collection(\"game_room\");\n  }\n\n  componentWillUnmountMount() {\n    this.gameRoomRef = null;\n  }\n\n  handleStartGame = () => {\n    const { language } = this.state;\n    this.setState({ loading: true });\n    this.gameRoomRef\n      .where(\"isFull\", \"==\", false)\n      .where(\"language\", \"==\", language)\n      .where(\"waitingForAFriend\", \"==\", false)\n      .where(\"leftInWaitingRoom\", \"==\", false)\n      .limit(1)\n      .get()\n      .then(snapshot => {\n        if (snapshot.empty) {\n          this.createGameRoom();\n          return;\n        }\n        snapshot.forEach(doc => this.joinGameRoom(doc));\n      });\n  };\n\n  createGameRoom = () => {\n    const { history, dispatch } = this.props;\n    const { language } = this.state;\n    const lettersRoundOne = generateWordsRandomly(language);\n    const lettersRoundOneSetTwo = generateWordsRandomly(language);\n    this.gameRoomRef\n      .add({\n        playerOne: getUserObject(FBInstant),\n        playerTwo: { displayName: null, photoURL: null, uid: \"\" },\n        isFull: false,\n        waitingForAFriend: false,\n        leftInWaitingRoom: false,\n        playerOnePoints: 0,\n        playerTwoPoints: 0,\n        lettersRoundOne,\n        lettersRoundOneSetTwo,\n        language\n      })\n      .then(gameRoomDatabaseRef => {\n        history.push({\n          pathname: routes.WAITING_FOR_OPONENT\n        });\n        dispatch({\n          type: SET_GAME_ROOM_DATABASE_REF,\n          payload: gameRoomDatabaseRef\n        });\n        this.setState({ loading: false });\n      });\n  };\n\n  joinGameRoom = async existingGameRoom => {\n    const { history, dispatch } = this.props;\n    const { language } = this.state;\n    await existingGameRoom.ref.update({\n      playerTwo: getUserObject(FBInstant),\n      isFull: true,\n      startedAt: moment().format()\n    });\n    history.push({\n      pathname: routes.GAME,\n      state: { language, playerTwo: true, playerOne: false }\n    });\n    dispatch({\n      type: SET_GAME_ROOM_DATABASE_REF,\n      payload: existingGameRoom.ref\n    });\n\n    this.setState({ loading: false });\n  };\n\n  handleChangeLanguage = language => {\n    this.setState({ language });\n  };\n\n  handlePlayWithFriend = async () => {\n    const chooseAsync = await FBInstant.context.chooseAsync();\n    const players = await FBInstant.context.getPlayersAsync();\n    const contextPlayers = players.map(player => ({\n      uid: player.getID(),\n      displayName: player.getName(),\n      photoURL: player.getPhoto()\n    }));\n    const playerToInvite = contextPlayers.find(\n      player => player.uid !== FBInstant.player.getID()\n    );\n    FBInstant.context.createAsync(playerToInvite.uid).then(function() {\n      console.log(\"FBInstant.context.getID()\", FBInstant.context.getID());\n      // 5544332211\n    });\n    console.log(\"playerToInvite\", playerToInvite);\n    FBInstant.updateAsync({\n      action: \"CUSTOM\",\n      cta: \"Join The Game\",\n      image: btoa(splash),\n      text: {\n        default: \"Your friend invited you\",\n        localizations: {\n          en_US: \"Your friend invited you\"\n        }\n      },\n      template: \"GAME_INVITE\",\n      data: { gameRoomId: \"111\" },\n      strategy: \"IMMEDIATE\",\n      notification: \"NO_PUSH\"\n    }).then(function() {\n      // closes the game after the update is posted.\n      console.log(\"here\");\n    });\n  };\n\n  render() {\n    const { language, loading } = this.state;\n    return (\n      <S.Container>\n        <S.UserWrap>\n          <S.UserImage src={FBInstant.player.getPhoto()} />\n          <S.UserName>{FBInstant.player.getName()}</S.UserName>\n        </S.UserWrap>\n        <Button\n          variant=\"contained\"\n          disabled={loading}\n          style={{\n            ...S.PlayButton,\n            backgroundColor: loading ? \"#CFCFCF\" : \"#8FB842\"\n          }}\n          onClick={this.handleStartGame}\n        >\n          Find opponent\n        </Button>\n        <Button\n          size=\"small\"\n          variant=\"text\"\n          disabled={loading}\n          style={S.PlayWithFriendButton}\n          onClick={this.handlePlayWithFriend}\n        >\n          Play with a friend\n        </Button>\n        <S.LanguagesWrap>\n          <S.LanguageButton\n            selected={language === \"cz\"}\n            onClick={() => this.handleChangeLanguage(\"cz\")}\n          >\n            <S.LanguageButtonImage src={CzFlag} />\n          </S.LanguageButton>\n          <S.LanguageButton\n            selected={language === \"en\"}\n            onClick={() => this.handleChangeLanguage(\"en\")}\n          >\n            <S.LanguageButtonImage src={EnFlag} />\n          </S.LanguageButton>\n        </S.LanguagesWrap>\n      </S.Container>\n    );\n  }\n}\n\nexport default connect()(Menu);\n","import styled from \"styled-components\";\n\nexport const spinnerStyle = { color: \"white\", marginRight: 13 };\n\nexport const Container = styled.div`\n  background: #1e2942;\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\nexport const PlayerPhoto = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin: 0 10px;\n  margin-right: 0px;\n  border: ${({ opponent }) =>\n    opponent ? \"3px solid #D28B11\" : \"3px solid #8ab618\"};\n  z-index: 3;\n`;\nexport const TopRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n  margin: 3px;\n  margin-bottom: 10px;\n  justify-content: space-between;\n  position: relative;\n`;\nexport const PlayerInfoWrap = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nexport const PlayerName = styled.span`\n  color: white;\n  font-style: 15px;\n  padding-left: 15px;\n`;\nexport const TimerWrap = styled.div`\n  display: flex;\n  background: #233454;\n  height: 75px;\n  width: 110px;\n  margin-top: -10px;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  position: absolute;\n  left: calc(100% / 2 - 60px);\n  top: 0;\n  border-bottom-left-radius: 7px;\n  border-bottom-right-radius: 7px;\n`;\nexport const TimerText = styled.span`\n  margin-top: 5px;\n  color: ${({ last10sec }) => (last10sec ? \"red\" : \"#04cbf4\")};\n  font-weight: 400;\n  font-size: 12px;\n`;\nexport const Bottom = styled.div`\n  background: #233454;\n  height: 65px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 15px;\n  margin-top: 45px;\n`;\nexport const Letter = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 15px;\n  border: ${({ newWords }) =>\n    newWords ? \"2px solid #D28B11\" : \"2px solid #8ab618\"};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: ${({ clicked }) => (clicked ? 0 : 1)};\n  transition: 150ms;\n  &:active {\n    opacity: ${({ hasNewWords, clicked }) =>\n      clicked ? 0 : hasNewWords ? \"1\" : \"0.6\"}\n`;\nexport const ActualLetter = styled.span`\n  font-weight: 500;\n  font-size: 17px;\n  color: white;\n`;\nexport const WordRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-bottom: 8px;\n  padding: 0 10px;\n`;\nexport const LetterWordOpponent = styled.div`\n  width: 20px;\n  height: 20px;\n  border-radius: 5px;\n  border: 1px solid ${({ empty }) => (empty ? \"#3b3c45\" : \"#D28B11\")};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport const LetterWord = styled.div`\n  width: 20px;\n  height: 20px;\n  border-radius: 5px;\n  border: 1px solid ${({ empty }) => (empty ? \"#3b3c45\" : \"#8ab618\")};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport const LetterWordIncative = styled.div`\n  width: 20px;\n  height: 20px;\n  border-radius: 5px;\n  border: 1px solid #3b3c45;\n`;\nexport const LetterWordText = styled.span`\n  color: ${({ empty }) => (empty ? \"rgba(255,255,255,.3)\" : \"white\")};\n  font-size: 10px;\n`;\nexport const ChosenLettersWrap = styled.div`\n  position: absolute;\n  bottom: 65px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  flex-direction: row;\n`;\nexport const ChosenLettersContainer = styled.div`\n  background: rgba(138, 182, 24, 0.85);\n  border-radius: 20px;\n  padding: 13px 15px;\n  padding-right: 8px;\n  margin-bottom: 7px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport const ChosenLetters = styled.span`\n  font-weight: bold;\n  font-size: 16px;\n  color: white;\n  letter-spacing: 7px;\n`;\nexport const EraseButton = styled.div`\n  background: #717171;\n  width: ${({ gameEnded }) => (gameEnded ? \"180px\" : \"90px\")};\n  height: 45px;\n  border-top-right-radius: 7px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: 200ms;\n  &:active {\n    opacity: 0.3;\n  }\n`;\nexport const NewWordsButton = styled.div`\n  background: #717171;\n  width: ${({ gameEnded }) => (gameEnded ? \"180px\" : \"90px\")};\n  height: 40px;\n  border-top-right-radius: 7px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const EraseButtonText = styled.span`\n  font-weight: 500;\n  font-size: 14px;\n  color: white;\n  letter-spacing: 3px;\n`;\nexport const SendButton = styled.div`\n  background: #717171;\n  width: ${({ gameEnded }) => (gameEnded ? \"180px\" : \"90px\")};\n  height: 40px;\n  border-top-left-radius: 7px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: 200ms;\n  &:active {\n    opacity: 0.3;\n  }\n`;\nexport const SendButtonText = styled.span`\n  font-weight: 500;\n  font-size: 14px;\n  color: white;\n  letter-spacing: 3px;\n`;\nexport const MidleWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\nexport const Midle = styled.div`\n  display: flex;\n  flex: 1;\n  margin: 10px;\n  margin-top: 0px;\n  flex-direction: row;\n`;\nexport const MidleLeft = styled.div`\n  display: flex;\n  flex: 1;\n  background: #23232f;\n  margin: 8px;\n  margin-top: 0px;\n  border-radius: 10px;\n`;\nexport const MidleRight = styled.div`\n  display: flex;\n  flex: 1;\n  background: #23232f;\n  margin: 8px;\n  margin-top: 0px;\n  border-radius: 10px;\n`;\nexport const MiddleRowWrap = styled.div`\n  width: 100%;\n  overflow: scroll;\n`;\nexport const GameEndedStats = styled.div`\n  background: #233454;\n  height: 65px;\n  margin-top: 45px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: row;\n`;\nexport const GameEndedStatsText = styled.span`\n  font-size: 20px;\n  color: white;\n  font-weight: bold;\n`;\nexport const SettingsWrap = styled.div`\n  background: black;\n  height: 100vh;\n  width: 35px;\n  display: flex;\n  align-items: start;\n  justify-content: center;\n`;\nexport const PlayerStats = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 7px;\n`;\nexport const PlayerPoints = styled.div`\n  color: white;\n  text-align: center;\n  font-size: 20px;\n  margin-top: 13px;\n  margin-bottom: 6px;\n  line-height: 10px;\n`;\n","// @flow\nimport React from \"react\";\nimport Moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport _get from \"lodash/get\";\nimport * as S from \"./styles\";\n\nconst roundTime = 120;\n\nconst mapStateToProps = state => state;\n\nclass Timer extends React.Component {\n  state = {\n    timerValueInSeconds: roundTime\n  };\n\n  componentDidMount() {\n    const { location } = this.props;\n    if (location.state.playerOne) {\n      this.onGameStarted();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { gameRoomState, location } = this.props;\n    if (\n      !_get(prevProps.gameRoomState, \"startedAt\", false) &&\n      gameRoomState.startedAt &&\n      location.state.playerTwo\n    ) {\n      this.onGameStarted();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    this.timer = null;\n  }\n\n  onGameStarted = () => {\n    const { onGameEnded, gameRoomState } = this.props;\n    this.timer = setInterval(() => {\n      const diff = Moment().diff(Moment(gameRoomState.startedAt));\n      const timeLeft =\n        roundTime - Math.floor(Moment.duration(diff).asSeconds());\n      if (timeLeft === 0) {\n        onGameEnded();\n        clearInterval(this.timer);\n        this.timer = null;\n        return;\n      }\n      this.setState({ timerValueInSeconds: timeLeft });\n    }, 1000);\n  };\n\n  render() {\n    const { timerValueInSeconds } = this.state;\n    const {\n      gameEnded,\n      gameRoomState: { playerOnePoints, playerTwoPoints },\n      amIPlayerOne\n    } = this.props;\n    const last10sec = timerValueInSeconds <= 10;\n    const myPoints = amIPlayerOne ? playerOnePoints : playerTwoPoints;\n    const opponentPoints = !amIPlayerOne ? playerOnePoints : playerTwoPoints;\n    return (\n      <S.TimerWrap>\n        <S.PlayerPoints>\n          {myPoints} - {opponentPoints}\n        </S.PlayerPoints>\n\n        <S.TimerText\n          last10sec={gameEnded ? false : last10sec}\n          gameEnded={gameEnded}\n        >\n          {gameEnded\n            ? \"Game Finished\"\n            : Moment.utc(timerValueInSeconds * 1000).format(\"mm:ss\")}\n        </S.TimerText>\n      </S.TimerWrap>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Timer);\n","import React, { Component } from \"react\";\nimport Timer from \"./timer\";\nimport * as S from \"./styles\";\n\nclass TopRow extends Component {\n  render() {\n    const {\n      gameRoomState,\n      user,\n      gameEnded,\n      onGameEnded,\n      location,\n      amIPlayerOne\n    } = this.props;\n    const { playerTwo, playerOne } = gameRoomState;\n\n    return (\n      <S.TopRow>\n        <S.PlayerInfoWrap>\n          <S.PlayerPhoto src={user.photoURL} />\n          <S.PlayerStats>\n            <S.PlayerName>{user.displayName}</S.PlayerName>\n          </S.PlayerStats>\n        </S.PlayerInfoWrap>\n        <Timer\n          gameRoomState={gameRoomState}\n          gameEnded={gameEnded}\n          onGameEnded={onGameEnded}\n          location={location}\n          amIPlayerOne={amIPlayerOne}\n        />\n        <S.PlayerInfoWrap>\n          <S.PlayerName>\n            {amIPlayerOne ? playerTwo.displayName : playerOne.displayName}\n          </S.PlayerName>\n          <S.PlayerPhoto\n            opponent\n            source={amIPlayerOne ? playerTwo.photoURL : playerOne.photoURL}\n          />\n        </S.PlayerInfoWrap>\n      </S.TopRow>\n    );\n  }\n}\n\nexport default TopRow;\n","// @flow\nimport React, { Fragment } from \"react\";\nimport _noop from \"lodash/noop\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport AutoRenewIcon from \"@material-ui/icons/Autorenew\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport * as S from \"./styles\";\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass NewLetters extends React.Component {\n  state = {\n    open: false\n  };\n\n  handleOpenModal = () => {\n    this.setState({ open: true });\n  };\n\n  handleConfirm = () => {\n    const { hadleGetNewWords } = this.props;\n    this.setState({ open: false });\n    hadleGetNewWords();\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { newWords } = this.props;\n    return (\n      <Fragment>\n        <S.Letter\n          key={15}\n          clicked={false}\n          disabled={newWords}\n          onClick={newWords ? _noop : this.handleOpenModal}\n          newWords\n          hasNewWords={newWords}\n          style={{ borderColor: newWords ? \"#696969\" : \"#D28B11\" }}\n        >\n          <S.ActualLetter style={{ color: newWords ? \"#696969\" : \"white\" }}>\n            <AutoRenewIcon style={{ marginTop: 4 }} size={25} />\n          </S.ActualLetter>\n        </S.Letter>\n\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          TransitionComponent={Transition}\n          keepMounted\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Get new set of letters?\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              No more words ? You can get new set of letters,\n              <br />\n              but only once per game.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} style={{ color: \"#8ab618\" }}>\n              Not yet\n            </Button>\n            <Button onClick={this.handleConfirm} style={{ color: \"#8ab618\" }}>\n              Get new letters\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nexport default NewLetters;\n","import React, { Component, Fragment } from \"react\";\nimport _map from \"lodash/map\";\nimport _identity from \"lodash/identity\";\nimport _split from \"lodash/split\";\nimport _partial from \"lodash/partial\";\nimport _debounce from \"lodash/debounce\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport NewLetters from \"./newLetters\";\nimport * as S from \"./styles\";\nimport {\n  validateWord,\n  sortValidAndInvalidWors,\n  checkIfWordIsAlreadySubmited,\n  sortBasedOnLength,\n  countPoints\n} from \"../../utils\";\n\nconst initialState = {\n  handleFinishWatchingAd: false,\n  userWatchedAd: false,\n  choosenLetters: [],\n  clickedLetterIndexes: [\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false\n  ]\n};\nclass LetterChoosing extends Component {\n  state = initialState;\n\n  constructor() {\n    super();\n    this.handleLetterClick = _debounce(this.handleLetterClick.bind(this), 200);\n  }\n\n  handleLetterClick = params => {\n    const letterArray = params[0];\n    const index = params[1];\n    const { choosenLetters, clickedLetterIndexes } = this.state;\n    if (clickedLetterIndexes[index]) return;\n    const newChosenLetters = [...choosenLetters, letterArray];\n    const newClickedLetterIndexes = [...clickedLetterIndexes];\n    newClickedLetterIndexes[index] = true;\n    this.setState({\n      choosenLetters: newChosenLetters,\n      clickedLetterIndexes: newClickedLetterIndexes\n    });\n  };\n\n  handleDeletePress = () => {\n    const { choosenLetters, clickedLetterIndexes } = this.state;\n    if (choosenLetters.length === 0) return;\n    const newChosenLetters = [...choosenLetters];\n    const newClickedLetterIndexes = [...clickedLetterIndexes];\n    const indexOfDeletedLetter =\n      newChosenLetters[newChosenLetters.length - 1][0];\n    //$FlowExpectedError\n    newClickedLetterIndexes[indexOfDeletedLetter] = false;\n    newChosenLetters.splice(-1, 1);\n    this.setState({\n      choosenLetters: newChosenLetters,\n      clickedLetterIndexes: newClickedLetterIndexes\n    });\n  };\n\n  handleFinishWatchingAd = () => {\n    this.setState({ userWatchedAd: true });\n  };\n\n  handleSendClick = () => {\n    const { choosenLetters } = this.state;\n    const {\n      validWords,\n      words,\n      gameRoomState,\n      setParentState,\n      gameRoomDatabaseRef,\n      amIPlayerOne\n    } = this.props;\n    if (choosenLetters.length === 0) return;\n    const word = _map(choosenLetters, item => _identity(item[1])).join();\n    const parsedWord = _split(word, \",\").join(\"\");\n    if (checkIfWordIsAlreadySubmited(validWords, parsedWord)) return;\n    const wordIsValid = validateWord(gameRoomState.language, words, parsedWord);\n    const newValidWords = [\n      ...validWords,\n      { text: parsedWord, valid: wordIsValid }\n    ];\n    let data = {};\n    if (amIPlayerOne) data.playerOnePoints = countPoints(newValidWords);\n    if (!amIPlayerOne) data.playerTwoPoints = countPoints(newValidWords);\n    console.log(data);\n    if (wordIsValid) gameRoomDatabaseRef.update({ ...data });\n    setParentState({\n      validWords: sortBasedOnLength(sortValidAndInvalidWors(newValidWords))\n    });\n    this.setState({\n      choosenLetters: initialState.choosenLetters,\n      clickedLetterIndexes: initialState.clickedLetterIndexes\n    });\n  };\n\n  render() {\n    const { choosenLetters, clickedLetterIndexes } = this.state;\n    const {\n      opponentPoints,\n      myPoints,\n      newWords,\n      gameRoomState,\n      iWon,\n      isDraw,\n      opponentFinished,\n      hadleGetNewWords,\n      opponentDidNotFinish\n    } = this.props;\n    let { gameEnded } = this.props;\n    const someoneLeftTheGame =\n      gameRoomState.playerOneLeft || gameRoomState.playerTwoLeft;\n    if (someoneLeftTheGame) gameEnded = true;\n\n    return (\n      <Fragment>\n        {gameEnded && someoneLeftTheGame && (\n          <S.GameEndedStats>\n            <S.GameEndedStatsText>\n              Your win opponent left the game\n            </S.GameEndedStatsText>\n          </S.GameEndedStats>\n        )}\n        {gameEnded && !opponentFinished && !opponentDidNotFinish && (\n          <S.GameEndedStats>\n            <CircularProgress style={S.spinnerStyle} size={15} />\n            <S.GameEndedStatsText>\n              Waiting for your opponent\n            </S.GameEndedStatsText>\n          </S.GameEndedStats>\n        )}\n        {gameEnded && (opponentFinished || opponentDidNotFinish) && (\n          <Fragment>\n            <S.ChosenLettersWrap>\n              <S.EraseButton gameEnded={gameEnded} onClick={this.goHome}>\n                <S.EraseButtonText>GO BACK TO MENU</S.EraseButtonText>\n              </S.EraseButton>\n            </S.ChosenLettersWrap>\n            <S.GameEndedStats>\n              <S.GameEndedStatsText>\n                {isDraw\n                  ? `It is draw. Your both had ${myPoints} points.`\n                  : iWon\n                  ? `You win with ${myPoints} points. Your opponent had ${opponentPoints} points.`\n                  : `You lost with ${myPoints} points. Your opponent had ${opponentPoints} points.`}\n              </S.GameEndedStatsText>\n            </S.GameEndedStats>\n          </Fragment>\n        )}\n        {!gameEnded && (\n          <Fragment>\n            <S.Bottom>\n              <NewLetters\n                hadleGetNewWords={hadleGetNewWords}\n                newWords={newWords}\n              />\n              {_map(\n                newWords\n                  ? gameRoomState.lettersRoundOne\n                  : gameRoomState.lettersRoundOneSetTwo,\n                (lettersObject, index) => (\n                  <S.Letter\n                    key={index}\n                    clicked={clickedLetterIndexes[index]}\n                    disabled={clickedLetterIndexes[index]}\n                    onClick={_partial(this.handleLetterClick, [\n                      lettersObject.x,\n                      index\n                    ])}\n                  >\n                    <S.ActualLetter>{lettersObject.x[1]}</S.ActualLetter>\n                  </S.Letter>\n                )\n              )}\n            </S.Bottom>\n            <S.ChosenLettersWrap>\n              <S.EraseButton onClick={this.handleDeletePress}>\n                <S.EraseButtonText>DELETE</S.EraseButtonText>\n              </S.EraseButton>\n              {choosenLetters.length > 0 && (\n                <S.ChosenLettersContainer>\n                  <S.ChosenLetters>\n                    {_map(choosenLetters, letter => _identity(letter[1]))}\n                  </S.ChosenLetters>\n                </S.ChosenLettersContainer>\n              )}\n              <S.SendButton onClick={this.handleSendClick}>\n                <S.EraseButtonText>\n                  {gameEnded ? \"GO BACK TO MENU\" : \"SEND\"}\n                </S.EraseButtonText>\n              </S.SendButton>\n            </S.ChosenLettersWrap>\n          </Fragment>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default LetterChoosing;\n","import React, { Component } from \"react\";\nimport _map from \"lodash/map\";\nimport _split from \"lodash/split\";\nimport * as S from \"./styles\";\n\nclass Midle extends Component {\n  render() {\n    const { validWords, gameEnded, opponentWords } = this.props;\n    return (\n      <S.MidleWrap>\n        <S.Midle>\n          <S.MidleLeft>\n            <S.MiddleRowWrap>\n              <div style={{ height: 10 }} />\n              {_map(validWords, (item, key) => {\n                const emptyLetters = [];\n                for (let i = 0, len = 10 - item.text.length; i < len; i += 1) {\n                  emptyLetters[i] = <S.LetterWord empty key={i + 20} />;\n                }\n                return (\n                  <S.WordRow key={key}>\n                    {_map(_split(item.text, \"\"), (letter, index) => (\n                      <S.LetterWord key={index} empty={!item.valid}>\n                        <S.LetterWordText empty={!item.valid}>\n                          {letter}\n                        </S.LetterWordText>\n                      </S.LetterWord>\n                    ))}\n                    {emptyLetters}\n                  </S.WordRow>\n                );\n              })}\n              <div style={{ height: 10 }} />\n            </S.MiddleRowWrap>\n          </S.MidleLeft>\n          <S.MidleRight>\n            <S.MiddleRowWrap>\n              <div style={{ height: 10 }} />\n              {gameEnded &&\n                _map(opponentWords, (item, key) => {\n                  const emptyLetters = [];\n                  for (\n                    let i = 0, len = 10 - item.text.length;\n                    i < len;\n                    i += 1\n                  ) {\n                    emptyLetters[i] = (\n                      <S.LetterWordOpponent empty key={i + 20} />\n                    );\n                  }\n                  return (\n                    <S.WordRow key={key}>\n                      {_map(_split(item.text, \"\"), (letter, index) => (\n                        <S.LetterWordOpponent key={index} empty={!item.valid}>\n                          <S.LetterWordText empty={!item.valid}>\n                            {letter}\n                          </S.LetterWordText>\n                        </S.LetterWordOpponent>\n                      ))}\n                      {emptyLetters}\n                    </S.WordRow>\n                  );\n                })}\n              <div style={{ height: 10 }} />\n            </S.MiddleRowWrap>\n          </S.MidleRight>\n        </S.Midle>\n      </S.MidleWrap>\n    );\n  }\n}\n\nexport default Midle;\n","// @flow\nimport React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport ExitIcon from \"@material-ui/icons/ExitToApp\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport * as S from \"./styles\";\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass Settings extends React.Component {\n  state = {\n    open: false\n  };\n\n  handleOpenModal = () => {\n    this.setState({ open: true });\n  };\n\n  handleLeave = () => {\n    const { onLeave } = this.props;\n    //this.setState({ open: false });\n    onLeave();\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <S.SettingsWrap>\n        <IconButton\n          aria-label=\"Settings\"\n          onClick={this.handleOpenModal}\n          style={{ color: \"white\", opacity: 0.8 }}\n        >\n          <ExitIcon size={5} />\n        </IconButton>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          TransitionComponent={Transition}\n          keepMounted\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Leave the game?\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              By leaving you will automatically loose.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} style={{ color: \"#8ab618\" }}>\n              Keep playing\n            </Button>\n            <Button onClick={this.handleLeave} style={{ color: \"#8ab618\" }}>\n              Leave\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </S.SettingsWrap>\n    );\n  }\n}\n\nexport default Settings;\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport TopRow from \"./topRow\";\nimport LetterChoosing from \"./letterChoosing\";\nimport Midle from \"./midle\";\nimport Settings from \"./settings\";\nimport {\n  dbRefUpdated,\n  getUserObject,\n  amIPlayerOneFunc,\n  getOpponentWords,\n  getOpponentFinished,\n  countPoints,\n  isGameRefSet\n} from \"../../utils\";\nimport { WORD_LIST_EN, WORD_LIST_CZ } from \"../../constants\";\nimport routes from \"../../constants/routes\";\nimport { SET_GAME_ROOM_DATABASE_REF } from \"../../redux/reducer\";\nimport * as S from \"./styles\";\n\nconst FBInstant = window.FBInstant;\n\nconst mapStateToProps = state => state;\n\nconst wordsAlises = {\n  cz: \"czechhWords\",\n  en: \"englishWords\"\n};\n\nconst wordListsUrls = {\n  cz: WORD_LIST_CZ,\n  en: WORD_LIST_EN\n};\n\nclass Game extends Component {\n  state = {\n    opponentDidNotFinish: false,\n    gameRoomState: false,\n    gameStarted: false,\n    gameEnded: false,\n    newWords: false,\n    validWords: [],\n    words: {\n      cz: [],\n      en: []\n    }\n  };\n\n  user = getUserObject(FBInstant);\n\n  componentDidMount() {\n    const { gameRoomDatabaseRef, location } = this.props;\n    if (location.state.playerOne) {\n      this.getGameRoomState(gameRoomDatabaseRef);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { gameRoomDatabaseRef, location } = this.props;\n    if (\n      dbRefUpdated(prevProps.gameRoomDatabaseRef, gameRoomDatabaseRef) &&\n      location.state.playerTwo\n    ) {\n      this.getGameRoomState(gameRoomDatabaseRef);\n    }\n  }\n\n  getGameRoomState = gameRoomDatabaseRef => {\n    if (isGameRefSet(gameRoomDatabaseRef)) {\n      gameRoomDatabaseRef.onSnapshot(doc => {\n        const data = doc.data();\n        this.getWordVocabulary(data.language);\n        this.setState({ gameRoomState: data });\n      });\n    }\n  };\n\n  getWordVocabulary = async (language: string) => {\n    const lang = wordsAlises[language];\n    const wordInCache = localStorage.getItem(lang);\n    if (wordInCache) {\n      this.setWords(language, JSON.parse(wordInCache));\n      return;\n    }\n    const apiCall = await axios.get(wordListsUrls[language]);\n    console.log(\"apiCall\", apiCall);\n    this.setWords(language, apiCall.data);\n    localStorage.setItem(lang, JSON.stringify(apiCall.data));\n  };\n\n  setWords = (language, wordsFromApi) => {\n    const { words } = this.state;\n    const newWords = {\n      ...words,\n      [language]: wordsFromApi\n    };\n    this.setState({ words: newWords });\n  };\n\n  onGameEnded = () => {\n    const { gameRoomDatabaseRef } = this.props;\n    const { validWords, gameRoomState } = this.state;\n    const amIPlayerOne = gameRoomState.playerOne.uid === this.user.uid;\n    const data = {};\n    if (amIPlayerOne) data.roundOnePlayerOneWords = validWords;\n    if (!amIPlayerOne) data.roundOnePlayerTwoWords = validWords;\n    this.setState({ gameEnded: true });\n    gameRoomDatabaseRef.update(data);\n    this.intervalForOpponentFinish = setTimeout(() => {\n      this.setState({ opponentDidNotFinish: true });\n    }, 5000);\n  };\n\n  hadleGetNewWords = () => this.setState({ newWords: true });\n\n  setParentState = newState => this.setState({ ...newState });\n\n  handleLeaveTheGame = () => {\n    const { gameRoomState } = this.state;\n    const { history, gameRoomDatabaseRef, dispatch } = this.props;\n    const amIPlayerOne = amIPlayerOneFunc(this.user, gameRoomState.playerOne);\n    let data = {};\n    if (amIPlayerOne) data.playerOneLeft = true;\n    if (!amIPlayerOne) data.playerTwoLeft = true;\n    gameRoomDatabaseRef.update(data);\n    dispatch({ type: SET_GAME_ROOM_DATABASE_REF, payload: {} });\n    history.push(routes.MENU);\n  };\n\n  render() {\n    const {\n      gameRoomState,\n      gameStarted,\n      gameEnded,\n      validWords,\n      words,\n      newWords,\n      opponentDidNotFinish\n    } = this.state;\n    const { location, gameRoomDatabaseRef } = this.props;\n    let opponentPoints = 0;\n    let myPoints = 0;\n    if (!gameRoomState) return <S.Container />;\n    const amIPlayerOne = amIPlayerOneFunc(this.user, gameRoomState.playerOne);\n    const opponentWords = getOpponentWords(amIPlayerOne, gameRoomState);\n    const opponentFinished = getOpponentFinished(amIPlayerOne, gameRoomState);\n    if (gameEnded && opponentFinished) {\n      opponentPoints = countPoints(opponentWords);\n      myPoints = countPoints(validWords);\n    }\n    const iWon = myPoints > opponentPoints;\n    const isDraw = myPoints === opponentPoints;\n    console.log(\"index game gameRoomState\", gameRoomState);\n    return (\n      <Fragment>\n        <S.Container>\n          {gameRoomState && Object.keys(gameRoomDatabaseRef).length > 0 && (\n            <Fragment>\n              <TopRow\n                onGameEnded={this.onGameEnded}\n                gameStarted={gameStarted}\n                gameEnded={gameEnded}\n                gameRoomState={gameRoomState}\n                user={getUserObject(FBInstant)}\n                location={location}\n                amIPlayerOne={amIPlayerOne}\n              />\n              <Midle\n                validWords={validWords}\n                gameEnded={validWords}\n                opponentWords={opponentWords}\n              />\n              <LetterChoosing\n                opponentPoints={opponentPoints}\n                myPoints={myPoints}\n                iWon={iWon}\n                isDraw={isDraw}\n                opponentFinished={opponentFinished}\n                validWords={validWords}\n                words={words}\n                gameEnded={gameEnded}\n                gameRoomState={gameRoomState}\n                setParentState={this.setParentState}\n                hadleGetNewWords={this.hadleGetNewWords}\n                opponentDidNotFinish={opponentDidNotFinish}\n                gameRoomDatabaseRef={gameRoomDatabaseRef}\n                newWords={newWords}\n                amIPlayerOne={amIPlayerOne}\n              />\n            </Fragment>\n          )}\n        </S.Container>\n        <Settings onLeave={this.handleLeaveTheGame} />\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Game);\n","export const WORD_LIST_EN =\n  \"https://raw.githubusercontent.com/paserak73/slovniFotbalWordLists/master/wordsEnglish.js\";\nexport const WORD_LIST_CZ =\n  \"https://raw.githubusercontent.com/paserak73/slovniFotbalWordLists/master/wordsCzech.js\";\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  background: #1e2942;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Text = styled.span`\n  color: white;\n  margin-bottom: 20px;\n`;\nexport const BackWrap = styled.div`\n  position: absolute;\n  left: 10px;\n  top: 10px;\n`;\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport BackIcon from \"@material-ui/icons/ArrowBackIos\";\n\nimport routes from \"../../constants/routes\";\nimport { dbRefUpdated, isGameRefSet } from \"../../utils\";\nimport * as S from \"./styles\";\n\nconst mapStateToProps = state => state;\n\nclass WaitingForOponent extends Component {\n  componentDidUpdate(prevProps) {\n    const { gameRoomDatabaseRef, history } = this.props;\n    if (\n      dbRefUpdated(prevProps.gameRoomDatabaseRef, gameRoomDatabaseRef) &&\n      isGameRefSet(gameRoomDatabaseRef)\n    ) {\n      gameRoomDatabaseRef.onSnapshot(doc => {\n        const data = doc.data();\n        if (data.isFull && !data.playerOneLeft && !data.playerTwoLeft) {\n          history.push({\n            pathname: routes.GAME,\n            state: { playerOne: true, playerTwo: false }\n          });\n        }\n      });\n    }\n  }\n\n  handleBack = async () => {\n    const { gameRoomDatabaseRef, history } = this.props;\n    history.push({ pathname: routes.MENU });\n    await gameRoomDatabaseRef.update({\n      leftInWaitingRoom: true\n    });\n  };\n\n  render() {\n    const { waitingForAFriend } = this.props.location;\n    return (\n      <S.Container>\n        <S.BackWrap>\n          <Button\n            onClick={this.handleBack}\n            variant=\"text\"\n            style={{ color: \"white\" }}\n          >\n            <BackIcon size={17} />\n            Cancel\n          </Button>\n        </S.BackWrap>\n        <S.Text>\n          {waitingForAFriend\n            ? \"Share a link with you friend and wait until he joins\"\n            : \"Finding a worthy opponent\"}\n        </S.Text>\n        {waitingForAFriend && (\n          <Button\n            mode=\"text\"\n            onClick={this.handleShareWithFriend}\n            text=\"Send link to your friend\"\n          />\n        )}\n      </S.Container>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(WaitingForOponent);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport Preload from \"./scenes/preload\";\nimport Menu from \"./scenes/menu\";\nimport Game from \"./scenes/game\";\nimport WaitingForOponent from \"./scenes/waitingForOponent\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Reducer from \"./redux/reducer\";\n\nconst store = createStore(Reducer);\n\nwindow.FBInstant.initializeAsync()\n  .then(function() {\n    console.log(\"XXXXX\");\n    ReactDOM.render(\n      <Provider store={store}>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Preload} />\n            <Route exact path=\"/menu\" component={Menu} />\n            <Route exact path=\"/game\" component={Game} />\n            <Route\n              exact\n              path=\"/WaitingForOponent\"\n              component={WaitingForOponent}\n            />\n          </Switch>\n        </BrowserRouter>\n      </Provider>,\n      document.getElementById(\"root\")\n    );\n  })\n  .catch(function(error) {\n    console.log(error.message);\n  });\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/splash.bc063e02.png\";"],"sourceRoot":""}
